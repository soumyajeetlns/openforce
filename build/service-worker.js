"use strict";var precacheConfig=[["/index.html","db470668d91053f1ae97e7896270ce22"],["/static/css/main.12ebce78.css","bb1de02dcd3a497e85f28cd2e3772d38"],["/static/media/addressIcon.7d88e362.svg","7d88e362cb73f2903588013bec9d0030"],["/static/media/approve-icon.cb3a9d67.svg","cb3a9d670647c4363c3211758f48209a"],["/static/media/archive_job.b4b3351f.svg","b4b3351f6b0d66a85dc43347ff64142f"],["/static/media/auto-approve-icon-off.a4614baa.svg","a4614baa97f3f2dcc81b585f0a8980ef"],["/static/media/auto-approve-icon.785429e4.svg","785429e4a820440bc4cafa23e7e6b1f7"],["/static/media/cover_img.e634af63.jpg","e634af6311cbd8586ca475a782aec469"],["/static/media/detailsIcon.cc10961d.svg","cc10961d662345c68186c6daa1245439"],["/static/media/end-job-icon.fc709534.svg","fc7095343891ad20d4ca70e5e9ab4094"],["/static/media/goBackIcon.7f0b5a74.svg","7f0b5a744a31168a0d3bfd69ae6a1b39"],["/static/media/job_many.fe574c46.svg","fe574c46817bf0cafa5e5ac565b560f6"],["/static/media/job_role.165704e1.svg","165704e190ce58859df6ed685a154669"],["/static/media/job_time.387530d3.svg","387530d32b8994a278c3e89fcf1808ca"],["/static/media/link_btn.19b4f5e9.jpg","19b4f5e9c9332850f4d6cec658f6a24d"],["/static/media/loader.ec1a3551.svg","ec1a3551184352ecb17abcae54a6baf8"],["/static/media/login_map_bg_new.cf1e42e9.jpg","cf1e42e9a430a1bc63c19777ca4594f0"],["/static/media/logo.eaa9c6d3.svg","eaa9c6d35abef5cada8527669b36780c"],["/static/media/settingsIcon.e2e781a7.svg","e2e781a70ee197f34a374c9dbf402ed8"],["/static/media/stripe-icon.468b15df.svg","468b15df0bad5050a814cdb00eb45341"],["/static/media/userIconPlaceholder.295af695.png","295af695cc6b970131e2c739127c5091"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),c.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),c=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),e=urlsToCacheKeys.has(t));var c="/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});